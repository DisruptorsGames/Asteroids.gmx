<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initalize
size = 32;
selection = undefined;
width = room_width / size;
height = room_height / size;

// create colors
palette = ds_list_create();
ds_list_add(palette, make_colour_rgb(25,156,8)); // 139,8,156
for (var i = 1; i &lt; width * height; i++)
{
    ds_list_add(palette, make_colour_elm());
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls
/*if (keyboard_check_pressed(vk_tab))
{
    selection += ternary(keyboard_check(vk_shift), -1, 1);
    if (selection &gt; ds_list_size(palette) - 1)
        selection = 0;
        
    if (selection &lt; 0)
        selection = ds_list_size(palette) - 1;
}*/

// Tooltip
if (keyboard_check(vk_alt))
{
    for (var i = 0; i &lt; ds_list_size(palette); i++)
    {
        var value = palette[| i],
            comp = make_colour_comp(value),
            ix = i mod width * size,
            iy = floor(i / width) * size;
            
        if (mouse_x &gt; ix &amp;&amp; mouse_x &lt; ix + size &amp;&amp; mouse_y &gt; iy &amp;&amp; mouse_y &lt; iy + size)
            selection = i;
    }
}
/*else
    selection = undefined;*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUI
if (!is_undefined(selection))
{
    var value = palette[| selection],
        comp = make_colour_comp(value),
        h = colour_get_hue(value),
        h1 = colour_get_hue(comp),
        cx = vw / 2,
        cy = vh / 2;
        
    draw_portrait(s_asteroid_m, 0, 16, 16, 32, value, true, true);
    draw_textbox(64, 16, element_draw(value), c_white, c_black, f_default, true, true);
    
    draw_portrait(s_asteroid_m, 1, 16, 64, 32, comp, true, true);
    draw_textbox(64, 64, element_draw(comp), c_white, c_black, f_default, true, true);
    
    draw_textbox(64, 96, "139,8,156", c_white, c_black, f_default, true, true);
    
    draw_circle_colour(vw / 2, vh / 2, 180, c_black, c_black, false);
    /*for (var i = 0; i &lt; 360; i += 30)
    {
        var c = make_colour_hsv(i, 255, 255);
        draw_line_colour(cx, cy, cx + lengthdir_x(180, i), cy + lengthdir_y(180, i), c_black, c);
    }*/
    
    draw_line_colour(cx, cy, cx + lengthdir_x(180, h), cy + lengthdir_y(180, h), c_black, value);
    draw_line_colour(cx, cy, cx + lengthdir_x(180, h1), cy + lengthdir_y(180, h1), c_black, comp);
    var c = make_colour_rgb(139,8,156), h2 = colour_get_hue(c);
    draw_line_colour(cx, cy, cx + lengthdir_x(180, h2), cy + lengthdir_y(180, h2), c_black, c);
}

/*
    RGB:
        025,156,008                 VALUE
        139,008,156            &lt;&lt;&lt;&lt; COMPLEMENTARY COLOR
        -----------
        230,099,247                 INVERSE RGB
        156,022,008                 ROTATE HUE 180
      
    HSV:
        113.1,094.9,061.2           VALUE
        293.1,094.9,061.2      &lt;&lt;&lt;&lt; COMPLEMENTARY COLOR
        -----------------
        080.0,242.0,156.0      **** HSV FROM RGB
        004.0,242.0,156.0           ROTATE HUE 180
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Grid
for (var i = 0; i &lt; ds_list_size(palette); i++)
{
    var value = palette[| i],
        ix = i mod width * size,
        iy = floor(i / width) * size;

    draw_rectangle_colour(ix, iy, ix + size, iy + size, value, value, value, value, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go Back
room_goto(r_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
